name: test
on:
  pull_request: { branches: ['*'] }
  push: { branches: ['main'] }

env:
  LOG_LEVEL: debug
  SWIFT_DETERMINISTIC_HASHING: 1

jobs:
  # Baseline test run for code coverage stats
  codecov:
    runs-on: ubuntu-latest
    container: swift:5.7-jammy
    steps:
      - name: Check out package
        uses: actions/checkout@v3
      - name: Run local tests with coverage
        run: swift test --enable-code-coverage
      - name: Submit coverage report to Codecov.io
        uses: vapor/swift-codecov-action@v0.2
        with:
          cc_flags: 'unittests'
          cc_env_vars: 'SWIFT_VERSION,SWIFT_PLATFORM,RUNNER_OS,RUNNER_ARCH,POSTGRES_VERSION'
          cc_fail_ci_if_error: true
          cc_verbose: true
          cc_dry_run: false

  # Check for API breakage versus main
  api-breakage:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    container: swift:5.7-jammy
    steps:
      - name: Check out package
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # https://github.com/actions/checkout/issues/766
      - name: Mark the workspace as safe
        run: git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - name: Check for API breaking changes
        run: swift package diagnose-api-breaking-changes origin/main

  unit-tests:
    uses: vapor/ci/.github/workflows/run-unit-tests.yml@reusable-workflows
    with:
      with_coverage: true
      with_tsan: true

  # Test integration with dependent package on Linux
  integration-tests:
    services:
      mysql-a:
        image: mysql:8
        env: { MYSQL_ALLOW_EMPTY_PASSWORD: "true", MYSQL_USER: test_username, MYSQL_PASSWORD: test_password, MYSQL_DATABASE: test_database }
      mysql-b:
        image: mysql:8
        env: { MYSQL_ALLOW_EMPTY_PASSWORD: "true", MYSQL_USER: test_username, MYSQL_PASSWORD: test_password, MYSQL_DATABASE: test_database }
      postgres-a:
        image: postgres:15
        env: { POSTGRES_USER: test_username, POSTGRES_PASSWORD: test_password, POSTGRES_DB: test_database }
      postgres-b:
        image: postgres:15
        env: { POSTGRES_USER: test_username, POSTGRES_PASSWORD: test_password, POSTGRES_DB: test_database }
    strategy:
      fail-fast: false
      matrix:
        swiftver:
          - swift:5.5-bionic
          - swift:5.6-focal
          - swift:5.7-jammy
          - swiftlang/swift:nightly-main-jammy
    runs-on: ubuntu-latest
    container: ${{ matrix.swiftver }}
    env:
      POSTGRES_HOSTNAME: postgres-a
      POSTGRES_HOSTNAME_A: postgres-a
      POSTGRES_HOSTNAME_B: postgres-b
      POSTGRES_DB: test_database
      POSTGRES_DB_A: test_database
      POSTGRES_DB_B: test_database
      POSTGRES_USER: test_username
      POSTGRES_USER_A: test_username
      POSTGRES_USER_B: test_username
      POSTGRES_PASSWORD: test_password
      POSTGRES_PASSWORD_A: test_password
      POSTGRES_PASSWORD_B: test_password
      MYSQL_DATABASE: test_database
      MYSQL_DATABASE_A: test_database
      MYSQL_DATABASE_B: test_database
      MYSQL_USERNAME: test_username
      MYSQL_USERNAME_A: test_username
      MYSQL_USERNAME_B: test_username
      MYSQL_PASSWORD: test_password
      MYSQL_PASSWORD_A: test_password
      MYSQL_PASSWORD_B: test_password
      MYSQL_HOSTNAME: mysql-a
      MYSQL_HOSTNAME_A: mysql-a
      MYSQL_HOSTNAME_B: mysql-b
    steps:
      - name: Install SQLite dependencies
        run: apt-get -q update && apt-get -q install -y libsqlite3-dev
      - name: Check out sql-kit
        uses: actions/checkout@v3
        with: { path: sql-kit }
      - name: Check out fluent-sqlite-driver
        uses: actions/checkout@v3
        with: { repository: 'vapor/fluent-sqlite-driver', path: fluent-sqlite-driver }
      - name: Check out fluent-postgres-driver
        uses: actions/checkout@v3
        with: { repository: 'vapor/fluent-postgres-driver', path: fluent-postgres-driver }
      - name: Check out fluent-mysql-driver
        uses: actions/checkout@v3
        with: { repository: 'vapor/fluent-mysql-driver', path: fluent-mysql-driver }

      - name: Use sql-kit in fluent-sqlite-driver
        run: swift package --package-path fluent-sqlite-driver edit sql-kit --path sql-kit
      - name: Use sql-kit in fluent-postgres-driver
        run: swift package --package-path fluent-postgres-driver edit sql-kit --path sql-kit
      - name: Use sql-kit in fluent-myql-driver
        run: swift package --package-path fluent-mysql-driver edit sql-kit --path sql-kit
        
      - name: Run fluent-sqlite-driver tests with Thread Sanitizer
        run: swift test --package-path fluent-sqlite-driver
      - name: Run fluent-postgres-driver tests with Thread Sanitizer
        run: swift test --package-path fluent-postgres-driver --sanitize=thread
      - name: Run fluent-mysql-driver tests with Thread Sanitizer
        run: swift test --package-path fluent-mysql-driver --sanitize=thread
